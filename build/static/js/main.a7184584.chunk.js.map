{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","season","lat","month","getSeason","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","error","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"sMAGMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,sBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,iBACNC,SAAU,eAsBCE,EAbO,SAAC,GAAa,IAC5BC,EANU,SAACC,EAAKC,GACtB,OAAIA,EAAQ,GAAKA,EAAQ,EAAUD,EAAM,EAAI,SAAW,SACjDA,EAAM,EAAI,SAAW,SAIbE,CADkB,EAAVF,KACO,IAAIG,MAAOC,YADR,EAGNX,EAAaM,GAAhCJ,EAHyB,EAGzBA,KAAMC,EAHmB,EAGnBA,SACd,OACE,yBAAKS,UAAS,yBAAoBN,IAChC,uBAAGM,UAAS,iCAA4BT,KACxC,4BAAKD,GACL,uBAAGU,UAAS,kCAA6BT,OCzBzCU,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACE,yBAAKF,UAAU,oBACb,yBAAKA,UAAU,sBAAsBE,KAK3CD,EAAQE,aAAe,CACrBD,QAAS,cAGID,QCTTG,E,2MACJC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,mFAEd,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACjD,SAAAC,GAAK,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAMb,e,+BAIvC,IAAD,EACuBc,KAAKX,MAA3BV,EADD,EACCA,IAAKW,EADN,EACMA,aAEb,OAAKX,GAAQW,EAIX,6BACGX,GAAO,kBAAC,EAAD,CAAeA,IAAKA,IAC5B,6BACCW,GAAY,iBAAcA,IANtB,kBAAC,EAAD,CAASJ,QAAQ,uC,GAdZe,IAAMC,WA0BxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.a7184584.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css';\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: 'Lets hit the beach!',\r\n    iconName: 'sun'\r\n  },\r\n  winter: {\r\n    text: 'Burr its cold!',\r\n    iconName: 'snowflake'\r\n  }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) return lat > 0 ? 'summer' : 'winter';\r\n  return lat > 0 ? 'winter' : 'summer';\r\n};\r\n\r\nconst SeasonDisplay = ({ lat }) => {\r\n  const season = getSeason(lat, new Date().getMonth());\r\n\r\n  const { text, iconName } = seasonConfig[season];\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive icon ${iconName}`}></i>\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive icon ${iconName}`}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from 'react';\r\n\r\nconst Spinner = ({ message }) => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui big text loader\">{message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  message: 'Loading...'\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport Spinner from './Spinner';\r\n\r\nclass App extends React.Component {\r\n  state = { lat: null, errorMessage: '' };\r\n\r\n  componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => this.setState({ lat: position.coords.latitude }),\r\n      error => this.setState({ errorMessage: error.message })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { lat, errorMessage } = this.state;\r\n\r\n    if (!lat && !errorMessage)\r\n      return <Spinner message=\"Please accept location request\" />;\r\n\r\n    return (\r\n      <div>\r\n        {lat && <SeasonDisplay lat={lat} />}\r\n        <br />\r\n        {errorMessage && `Error: ${errorMessage}`}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}